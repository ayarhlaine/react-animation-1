{"version":3,"sources":["SectionTitle/SectionTitle.jsx","Background/Background.jsx","hooks/toggle.hook.js","Basic/FadeIn/FadeIn.jsx","Basic/NumberCounter/NumberCounter.jsx","Basic/WaterTank/WaterTank.jsx","Basic/Basic.jsx","Nav/Nav.jsx","useSpring/Card/Card.jsx","useSpring/Chooser/Chooser.jsx","App.js","serviceWorker.js","index.js"],"names":["SectionTitle","title","className","Background","children","useTimer","timerSec","useState","toggle","setToggle","useEffect","intervalID","setInterval","clearInterval","FadeIn","props","useSpring","opacity","from","div","style","NumberCounter","number","duration","span","interpolate","parseInt","toFixed","getRandomArbitrary","min","max","Math","random","WaterTank","current","setCurrent","next","setNext","height","percentage","Basic","Nav","activeTab","onActiveChange","AppBar","position","Tabs","value","onChange","event","newValue","aria-label","Tab","label","calc","x","y","window","innerHeight","innerWidth","trans","s","Card","xys","config","mass","tension","friction","set","class","onMouseMove","clientX","clientY","onMouseLeave","transform","backgroundImage","process","data","name","css","Chooser","open","setOpen","selected","setSelected","springRef","useRef","transRef","ref","stiff","size","background","display","to","transitions","useTransition","item","unique","trail","length","enter","leave","useChain","width","onClick","alignItems","justifyContent","role","map","key","App","React","setActiveTab","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbd58c60.chunk.js","sourcesContent":["import React from 'react'\nimport './SectionTitle.css';\nfunction SectionTitle({ title }) {\n    return (\n        <div className=\"SectionTitle\">\n            <h3> {title}</h3>\n        </div>\n    )\n}\n\nexport default SectionTitle\n","import React from 'react'\nimport './Background.css';\nfunction Background({ children }) {\n    return (\n        <div className=\"Background\">\n            {children}\n        </div>\n    )\n}\n\nexport default Background\n","import { useState, useEffect } from 'react';\nexport function useTimer(timerSec = 3000) {\n    const [toggle, setToggle] = useState(false);\n    useEffect(() => {\n        const intervalID = setInterval(() => {\n            setToggle(!toggle);\n        },timerSec);\n        return () => {\n            clearInterval(intervalID);\n        }\n    },[toggle, timerSec]);\n    return toggle;\n}","import React from 'react';\nimport {useSpring, animated} from 'react-spring'\nimport Background from '../../Background/Background';\nimport { useTimer } from '../../hooks/toggle.hook';\n\nfunction FadeIn() {\n    const toggle = useTimer();\n    const props = useSpring({opacity: toggle ? 0 :1, from: {opacity: toggle ? 1 : 0}})\n    return (\n        <Background >\n            <animated.div style={props}>I will fade in / out</animated.div>\n        </Background>\n    )\n}\n\nexport default FadeIn\n","import React from 'react'\nimport Background from '../../Background/Background'\nimport { animated, useSpring } from 'react-spring';\nimport { useTimer } from '../../hooks/toggle.hook';\nimport './NumberCounter.css';\nfunction NumberCounter() {\n    const toggle = useTimer();\n    const props = useSpring({ number: toggle ? 1 : 0, from: { number: toggle ? 0 : 1 }, duration: 3000 })\n    return (\n        <div className=\"NumberCounter\">\n            <Background>\n            <div className=\"NumberCounter__value\">\n                <animated.span>{props.number.interpolate((number) => `${parseInt(number.toFixed(2) * 100)}`)}</animated.span>\n                <span>&#8451;</span>\n            </div>\n            </Background>\n        </div>\n    )\n}\n\nexport default NumberCounter\n","import React, { useState, useEffect} from 'react'\nimport { animated, useSpring } from 'react-spring';\nimport Background from '../../Background/Background';\nimport { useTimer } from '../../hooks/toggle.hook';\nimport './WaterTank.css';\n\nfunction getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}\nfunction WaterTank() {\n    const toggle = useTimer(2000);\n    const [current, setCurrent] = useState(0);\n    const [next, setNext] = useState(getRandomArbitrary(0, 100));\n    useEffect(() => {\n        if(toggle){\n            setCurrent(next);\n            setNext(getRandomArbitrary(0, 100));\n        }\n        // eslint-disable-next-line\n    },[toggle]);\n\n    const { number } = useSpring({ number: next, from: { number: current }, duration: 9000 })\n    const percentage = (number) => `${number.toFixed(0)}%`;\n    return (\n        <Background >\n        <animated.div className=\"WaterTank\">\n            <animated.div\n            className={`Tank ${next.toFixed(0) >= 50 ? 'Tank__Normal' : 'Tank__Critical'}`}\n            style={{\n                height: number.interpolate((number) => percentage(number))\n            }}\n            >\n            </animated.div>\n            <span className=\"Tank__Value\">{next.toFixed(0)} â„“</span>\n        </animated.div>\n        </Background>\n    )\n}\n\nexport default WaterTank\n","import React from 'react';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport FadeIn from './FadeIn/FadeIn';\nimport NumberCounter from './NumberCounter/NumberCounter';\nimport WaterTank from './WaterTank/WaterTank';\nimport './Basic.css'\nfunction Basic() {\n    return (\n        <div className=\"Basic\">\n           <SectionTitle  title=\"Fade In / Fade Out\"/>\n           <FadeIn />\n           <SectionTitle  title=\"Number Counter\"/>\n           <NumberCounter />\n           <SectionTitle  title=\"Water Tank\"/>\n           <WaterTank />\n        </div>\n    )\n}\n\nexport default Basic;\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './Nav.css';\nfunction Nav({ activeTab, onActiveChange }) {\n    const handleChange = (event, newValue) => {\n        onActiveChange(newValue);\n    };\n    return (\n        <AppBar position=\"static\" className='CustomAppBar'>\n            <Tabs value={activeTab} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Basic\"  value='basic'/>\n            <Tab label=\"3D Card\" value='3d-card'/>\n            <Tab label=\"Use Spring\" value='use-spring'/>\n            </Tabs>\n      </AppBar>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport './Card.css';\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\nfunction Card() {\n    const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n    const imageURL = process.env.PUBLIC_URL+\"/images/myimage.jpg\";\n    return (\n        <div className='Card'>\n            <animated.div\n            class=\"Card__card\"\n            onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            style={{ \n                transform: props.xys.interpolate(trans),\n                backgroundImage: `url(${imageURL})`,\n            }}\n            />\n        </div>\n    )\n}\n\nexport default Card\n","import React, {useRef, useState} from 'react'\nimport { animated, useSpring, useTransition, useChain, config} from 'react-spring';\nimport './Chooser.css';\nconst data = [\n    {\n        name: 'Apple',\n        css: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',\n        height: 200,\n    },\n    {\n        name: 'Orange',\n        css: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',\n        height: 200,\n    },\n    {\n        name: 'Banana',\n        css: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',\n        height: 200,\n    }\n];\nfunction Chooser() {\n    const [open, setOpen] = useState(false);\n    const [selected, setSelected] = useState('');\n    const springRef = useRef();\n    const transRef = useRef();\n    const {size, background, display}= useSpring({\n        ref: springRef,\n        config: config.stiff,\n        from: { size: '30%', background: 'mediumvioletred', display: 'flex'},\n        to: { size: open ? '100%' : '30%', background: open ? 'white' : 'mediumvioletred', display: open ? 'none' : 'flex' }\n    })\n\n    const transitions = useTransition(open ? data : [], item => item.name, {\n        ref: transRef,\n        unique: true,\n        trail: 50 / data.length,\n        from: { opacity: 0, transform: 'scale(0)' },\n        enter: { opacity: 1, transform: 'scale(1)' },\n        leave: { opacity: 0, transform: 'scale(0)' }\n    })\n    useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6] )\n    const handleClick = () => {\n        setOpen(!open);\n    }\n    return (\n        <div className=\"Chooser\">\n            <div className=\"Chooser__selectedItem\">\n                <h3>Selected Item : { !open && selected}</h3>\n            </div>\n            <animated.div className=\"Container\" style={{\n                width: size,\n                height: size,\n                background: background,\n                // ...rest,\n            }} onClick={handleClick}>\n                <animated.div style={{\n                    display: display,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    <h2><span role=\"img\" aria-label=\"Point\">ðŸ‘‰</span> Fruits</h2>\n                </animated.div>\n                {transitions.map(({ item, key, props }) => (\n                    <div className='Item' key={key} style={{ ...props, background: item.css, height: item.height }} onClick={() => setSelected(item.name)} >\n                        {item.name}\n                    </div>\n                ))}\n            </animated.div>\n        </div>\n    )\n}\n\nexport default Chooser\n","import React from 'react';\nimport './App.css';\nimport Basic from './Basic/Basic';\nimport Nav from './Nav/Nav';\nimport Card from './useSpring/Card/Card';\nimport Chooser from './useSpring/Chooser/Chooser';\n\nfunction App() {\n  const [activeTab, setActiveTab] = React.useState('basic');\n  return (\n    <div className=\"App\">\n      <Nav activeTab={activeTab} onActiveChange={setActiveTab}/>\n      <div className=\"App__body\">\n        { activeTab === 'basic' && <Basic />}\n        { activeTab === '3d-card' && <Card />}\n        { activeTab === 'use-spring' && <Chooser />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}